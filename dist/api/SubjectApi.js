'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
wagger Unicast
ocumento de la API de Unicast

penAPI spec version: 1.0.8


his class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
https://openapi-generator.tech
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _Subject = require('../model/Subject');

var _Subject2 = _interopRequireDefault(_Subject);

var _SubjectGetResponse = require('../model/SubjectGetResponse');

var _SubjectGetResponse2 = _interopRequireDefault(_SubjectGetResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* Subject service.
* @module api/SubjectApi
* @version 1.0.8
*/
var SubjectApi = function () {

  /**
  * Constructs a new SubjectApi. 
  * @alias module:api/SubjectApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function SubjectApi(apiClient) {
    _classCallCheck(this, SubjectApi);

    this.apiClient = apiClient || _ApiClient2.default.instance;
  }

  /**
   * Callback function to receive the result of the addSubject operation.
   * @callback module:api/SubjectApi~addSubjectCallback
   * @param {String} error Error message, if any.
   * @param {module:model/Subject} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Crear nueva asignatura
   * @param {module:model/Subject} subject Asignatura a aÃ±adir
   * @param {module:api/SubjectApi~addSubjectCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/Subject}
   */


  _createClass(SubjectApi, [{
    key: 'addSubject',
    value: function addSubject(subject, callback) {
      var postBody = subject;
      // verify the required parameter 'subject' is set
      if (subject === undefined || subject === null) {
        throw new Error("Missing the required parameter 'subject' when calling addSubject");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = ['bearerAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/hal+json'];
      var returnType = _Subject2.default;
      return this.apiClient.callApi('/subjects', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the deleteUserFromSubject operation.
     * @callback module:api/SubjectApi~deleteUserFromSubjectCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Elimina el usuario de la relacion con asignatura
     * @param {Number} userId Id del usuario
     * @param {Number} subjectId Id de la asignatura
     * @param {module:api/SubjectApi~deleteUserFromSubjectCallback} callback The callback function, accepting three arguments: error, data, response
     */

  }, {
    key: 'deleteUserFromSubject',
    value: function deleteUserFromSubject(userId, subjectId, callback) {
      var postBody = null;
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling deleteUserFromSubject");
      }
      // verify the required parameter 'subjectId' is set
      if (subjectId === undefined || subjectId === null) {
        throw new Error("Missing the required parameter 'subjectId' when calling deleteUserFromSubject");
      }

      var pathParams = {
        'user_id': userId,
        'subject_id': subjectId
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = ['bearerAuth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;
      return this.apiClient.callApi('/subjects/{subject_id}/users/{user_id}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the getSubjects operation.
     * @callback module:api/SubjectApi~getSubjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubjectGetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lista de asignaturas
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Numero de la pÃ¡gina a devolver
     * @param {module:api/SubjectApi~getSubjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubjectGetResponse}
     */

  }, {
    key: 'getSubjects',
    value: function getSubjects(opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {};
      var queryParams = {
        'page': opts['page']
      };
      var headerParams = {};
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/hal+json'];
      var returnType = _SubjectGetResponse2.default;
      return this.apiClient.callApi('/subjects', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the putUser operation.
     * @callback module:api/SubjectApi~putUserCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Relacionar un usuario con una asignatura (tanto profesores como alumnos)
     * @param {Number} id Id de la asignatura
     * @param {Number} body Link del usuario a asociar con la asignatura
     * @param {module:api/SubjectApi~putUserCallback} callback The callback function, accepting three arguments: error, data, response
     */

  }, {
    key: 'putUser',
    value: function putUser(id, body, callback) {
      var postBody = body;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling putUser");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling putUser");
      }

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = ['bearerAuth'];
      var contentTypes = ['text/uri-list'];
      var accepts = [];
      var returnType = null;
      return this.apiClient.callApi('/subjects/{id}/users', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the updateSubject operation.
     * @callback module:api/SubjectApi~updateSubjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Subject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Actualizar una asignatura
     * @param {Number} id Id de la asignatura
     * @param {module:model/Subject} subject Contenido a editar
     * @param {module:api/SubjectApi~updateSubjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Subject}
     */

  }, {
    key: 'updateSubject',
    value: function updateSubject(id, subject, callback) {
      var postBody = subject;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateSubject");
      }
      // verify the required parameter 'subject' is set
      if (subject === undefined || subject === null) {
        throw new Error("Missing the required parameter 'subject' when calling updateSubject");
      }

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = ['bearerAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/hal+json'];
      var returnType = _Subject2.default;
      return this.apiClient.callApi('/subjects/{id}', 'PATCH', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
  }]);

  return SubjectApi;
}();

exports.default = SubjectApi;