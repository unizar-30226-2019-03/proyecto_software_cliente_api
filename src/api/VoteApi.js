/**
 * Swagger Unicast
 * Documento de la API de Unicast
 *
 * OpenAPI spec version: 1.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Exception2 from '../model/Exception2';
import Vote2 from '../model/Vote2';

/**
* Vote service.
* @module api/VoteApi
* @version 1.3.8
*/
export default class VoteApi {

    /**
    * Constructs a new VoteApi. 
    * @alias module:api/VoteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addVote operation.
     * @callback module:api/VoteApi~addVoteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Vote2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Subida de un nuevo voto
     * Adicion de nuevo voto
     * @param {Number} videoId Id del video sobre el que votar
     * @param {Number} suitability adecuacion
     * @param {Number} clarity claridad
     * @param {Number} quality calidad
     * @param {module:api/VoteApi~addVoteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Vote2}
     */
    addVote(videoId, suitability, clarity, quality, callback) {
      let postBody = null;
      // verify the required parameter 'videoId' is set
      if (videoId === undefined || videoId === null) {
        throw new Error("Missing the required parameter 'videoId' when calling addVote");
      }
      // verify the required parameter 'suitability' is set
      if (suitability === undefined || suitability === null) {
        throw new Error("Missing the required parameter 'suitability' when calling addVote");
      }
      // verify the required parameter 'clarity' is set
      if (clarity === undefined || clarity === null) {
        throw new Error("Missing the required parameter 'clarity' when calling addVote");
      }
      // verify the required parameter 'quality' is set
      if (quality === undefined || quality === null) {
        throw new Error("Missing the required parameter 'quality' when calling addVote");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'video_id': videoId,
        'suitability': suitability,
        'clarity': clarity,
        'quality': quality
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = Vote2;
      return this.apiClient.callApi(
        '/votes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
