/**
 * Swagger Unicast
 * Documento de la API de Unicast
 *
 * OpenAPI spec version: 1.1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Display2 from './Display2';
import DisplayId from './DisplayId';
import Video2 from './Video2';

/**
 * The DisplayWithVideoEmbedded2 model module.
 * @module model/DisplayWithVideoEmbedded2
 * @version 1.1.5
 */
class DisplayWithVideoEmbedded2 {
    /**
     * Constructs a new <code>DisplayWithVideoEmbedded2</code>.
     * @alias module:model/DisplayWithVideoEmbedded2
     * @extends module:model/Display2
     * @implements module:model/Display2
     */
    constructor() { 
        Display2.initialize(this);
        DisplayWithVideoEmbedded2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DisplayWithVideoEmbedded2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisplayWithVideoEmbedded2} obj Optional instance to populate.
     * @return {module:model/DisplayWithVideoEmbedded2} The populated <code>DisplayWithVideoEmbedded2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisplayWithVideoEmbedded2();
            Display2.constructFromObject(data, obj);
            Display2.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = DisplayId.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('timestampLastTime')) {
                obj['timestampLastTime'] = ApiClient.convertToType(data['timestampLastTime'], 'Date');
            }
            if (data.hasOwnProperty('secsFromBeg')) {
                obj['secsFromBeg'] = ApiClient.convertToType(data['secsFromBeg'], 'Number');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = Video2.constructFromObject(data['video']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/DisplayId} id
 */
DisplayWithVideoEmbedded2.prototype['id'] = undefined;

/**
 * @member {Date} timestampLastTime
 */
DisplayWithVideoEmbedded2.prototype['timestampLastTime'] = undefined;

/**
 * @member {Number} secsFromBeg
 */
DisplayWithVideoEmbedded2.prototype['secsFromBeg'] = undefined;

/**
 * @member {module:model/Video2} video
 */
DisplayWithVideoEmbedded2.prototype['video'] = undefined;


// Implement Display2 interface:
/**
 * @member {module:model/DisplayId} id
 */
Display2.prototype['id'] = undefined;
/**
 * @member {Date} timestampLastTime
 */
Display2.prototype['timestampLastTime'] = undefined;
/**
 * @member {Number} secsFromBeg
 */
Display2.prototype['secsFromBeg'] = undefined;




export default DisplayWithVideoEmbedded2;

